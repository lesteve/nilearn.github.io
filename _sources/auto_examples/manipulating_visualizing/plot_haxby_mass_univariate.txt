

.. _example_manipulating_visualizing_plot_haxby_mass_univariate.py:


Massively univariate analysis of face vs house recognition
==========================================================

A permuted Ordinary Least Squares algorithm is run at each voxel in
order to detemine whether or not it behaves differently under a "face
viewing" condition and a "house viewing" condition.
We consider the mean image per session and per condition.
Otherwise, the observations cannot be exchanged at random because
a time dependance exists between observations within a same session
(see [1] for more detailed explanations).

The example shows the small differences that exist between
Bonferroni-corrected p-values and family-wise corrected p-values obtained
from a permutation test combined with a max-type procedure [2].
Bonferroni correction is a bit conservative, as revealed by the presence of
a few false negative.

References
----------
[1] Winkler, A. M. et al. (2014).
    Permutation inference for the general linear model. Neuroimage.

[2] Anderson, M. J. & Robinson, J. (2001).
    Permutation tests for linear models.
    Australian & New Zealand Journal of Statistics, 43(1), 75-88.
    (http://avesbiodiv.mncn.csic.es/estadistica/permut2.pdf)




.. rst-class:: sphx-glr-horizontal


    *

      .. image:: images/plot_haxby_mass_univariate_001.png
            :scale: 47

    *

      .. image:: images/plot_haxby_mass_univariate_002.png
            :scale: 47


**Script output**:

.. rst-class:: sphx-glr-script-out

  ::

    Mask nifti image (3D) is located at: /home/lesteve/nilearn_data/haxby2001_simple/pymvpa-exampledata/mask.nii.gz
    Functional nifti image (4D) is located at: /home/lesteve/nilearn_data/haxby2001_simple/pymvpa-exampledata/bold.nii.gz


**Python source code:** :download:`plot_haxby_mass_univariate.py <plot_haxby_mass_univariate.py>`

.. literalinclude:: plot_haxby_mass_univariate.py
    :lines: 30-

**Total running time of the example:**  30.50 seconds
( 0 minutes  30.50 seconds)
    